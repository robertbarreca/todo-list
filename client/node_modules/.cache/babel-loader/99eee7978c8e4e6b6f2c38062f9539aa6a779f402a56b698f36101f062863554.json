{"ast":null,"code":"var _jsxFileName = \"/Users/robertbarreca/Downloads/work_app_stuff/personal_projects/todo-app/client/src/Todo.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo(props) {\n  const todo = props.todo;\n  const setTodos = props.setTodos;\n  const updateTodo = async (id, currentStatus) => {\n    try {\n      const res = await fetch(`/api/todos/${id}`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          status: currentStatus\n        }),\n        // Toggle the status\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!res.ok) {\n        throw new Error(\"Failed to update todo\");\n      }\n      const updatedTodo = await res.json();\n      if (updatedTodo.acknowledged) {\n        setTodos(currentTodos => {\n          return currentTodos.map(currTodo => {\n            if (currTodo._id === id) {\n              return {\n                ...currTodo,\n                status: !currentStatus\n              }; // Use the toggled status\n            } else {\n              return currTodo;\n            }\n          });\n        });\n      }\n    } catch (error) {\n      console.error(\"Error updating todo:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: todo.todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo__status\",\n        onClick: () => updateTodo(todo._id, todo.status),\n        children: todo.status ? \"☑\" : \"☐\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["Todo","props","todo","setTodos","updateTodo","id","currentStatus","res","fetch","method","body","JSON","stringify","status","headers","ok","Error","updatedTodo","json","acknowledged","currentTodos","map","currTodo","_id","error","console","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/robertbarreca/Downloads/work_app_stuff/personal_projects/todo-app/client/src/Todo.jsx"],"sourcesContent":["export default function Todo(props) {\n    const todo = props.todo\n    const setTodos = props.setTodos\n\n   const updateTodo = async (id, currentStatus) => {\n    try {\n        const res = await fetch(`/api/todos/${id}`, {\n            method: \"PUT\",\n            body: JSON.stringify({ status: currentStatus }), // Toggle the status\n            headers: { \"Content-Type\": \"application/json\" },\n        });\n\n        if (!res.ok) {\n            throw new Error(\"Failed to update todo\");\n        }\n\n        const updatedTodo = await res.json();\n\n        if (updatedTodo.acknowledged) {\n            setTodos(currentTodos => {\n                return currentTodos.map((currTodo) => {\n                    if (currTodo._id === id) {\n                        return { ...currTodo, status: !currentStatus }; // Use the toggled status\n                    } else {\n                        return currTodo;\n                    }\n                });\n            });\n        }\n    } catch (error) {\n        console.error(\"Error updating todo:\", error);\n    }\n};\n\n    \n    return(\n        <div className=\"todo\">\n        <p>{todo.todo}</p> \n        <div>\n            <button\n                className=\"todo__status\"\n                onClick={() => updateTodo(todo._id, todo.status)}>\n                { todo.status ? \"☑\" : \"☐\" }\n            </button>\n        </div>\n        </div>\n    )   \n}"],"mappings":";;AAAA,eAAe,SAASA,IAAIA,CAACC,KAAK,EAAE;EAChC,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAI;EACvB,MAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;EAEhC,MAAMC,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEC,aAAa,KAAK;IAC/C,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAcH,EAAE,EAAE,EAAE;QACxCI,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEP;QAAc,CAAC,CAAC;QAAE;QACjDQ,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAClD,CAAC,CAAC;MAEF,IAAI,CAACP,GAAG,CAACQ,EAAE,EAAE;QACT,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MAEA,MAAMC,WAAW,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;MAEpC,IAAID,WAAW,CAACE,YAAY,EAAE;QAC1BhB,QAAQ,CAACiB,YAAY,IAAI;UACrB,OAAOA,YAAY,CAACC,GAAG,CAAEC,QAAQ,IAAK;YAClC,IAAIA,QAAQ,CAACC,GAAG,KAAKlB,EAAE,EAAE;cACrB,OAAO;gBAAE,GAAGiB,QAAQ;gBAAET,MAAM,EAAE,CAACP;cAAc,CAAC,CAAC,CAAC;YACpD,CAAC,MAAM;cACH,OAAOgB,QAAQ;YACnB;UACJ,CAAC,CAAC;QACN,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAGG,oBACIE,OAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACrBF,OAAA;MAAAE,QAAA,EAAI1B,IAAI,CAACA;IAAI;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBN,OAAA;MAAAE,QAAA,eACIF,OAAA;QACIC,SAAS,EAAC,cAAc;QACxBM,OAAO,EAAEA,CAAA,KAAM7B,UAAU,CAACF,IAAI,CAACqB,GAAG,EAAErB,IAAI,CAACW,MAAM,CAAE;QAAAe,QAAA,EAC/C1B,IAAI,CAACW,MAAM,GAAG,GAAG,GAAG;MAAG;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACE,EAAA,GA/CuBlC,IAAI;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}